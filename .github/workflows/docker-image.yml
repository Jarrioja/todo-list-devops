name: CI / CD

on:
    push:
        branches: ['main', 'staging']
    pull_request:
        branches: ['main', 'staging']
permissions:
    contents: write

jobs:
    Build-and-push-image-prod:
        name: Build and push Docker image on production
        runs-on: ubuntu-latest
        environment:
            name: prod
        steps:
            - uses: actions/checkout@v4

            - name: Log in to Docker Hub
              run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            - name: Build the Docker image
              run: docker build . --file Dockerfile --tag jarrioja/todo-app:$(git rev-parse --short HEAD) --tag jarrioja/todo-app:latest --build-arg MYSQL_HOST=${{ secrets.MYSQL_HOST }} --build-arg MYSQL_USER=${{ secrets.MYSQL_USER }} --build-arg MYSQL_DB=${{ secrets.MYSQL_DB }} --build-arg MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} --build-arg MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}

            - name: Push the Docker image current commit tag
              run: docker push jarrioja/todo-app:$(git rev-parse --short HEAD)

            - name: Push the Docker image latest tag
              run: docker push jarrioja/todo-app:latest

    update-deployment-prod:
        name: Update deployment on production
        runs-on: ubuntu-latest
        needs: Build-and-push-image-prod
        environment:
            name: prod

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Get short commit hash
              id: vars
              run: echo " name=short_commit_hash::$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: Update deployment.yml
              run: |
                  sed -i "s|image: jarrioja/todo-app:.*|image: jarrioja/todo-app:${{ steps.vars.outputs.short_commit_hash }}|g" kubernetes/base/deployment.yml
                  cat kubernetes/base/deployment.yml

            - name: Commit changes.
              run: |
                  git add kubernetes/base/deployment.yml
                  git commit -m "Update image tag to ${{ steps.vars.outputs.short_commit_hash }}"
                  git push

    Build-and-push-image-staging:
        name: Build and push Docker image on staging
        runs-on: ubuntu-latest
        environment:
            name: staging
        steps:
            - uses: actions/checkout@v4

            - name: Log in to Docker Hub
              run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            - name: Build the Docker image
              run: docker build . --file Dockerfile --tag jarrioja/todo-app:$(git rev-parse --short HEAD) --tag jarrioja/todo-app:latest --build-arg MYSQL_HOST=${{ secrets.MYSQL_HOST }} --build-arg MYSQL_USER=${{ secrets.MYSQL_USER }} --build-arg MYSQL_DB=${{ secrets.MYSQL_DB }} --build-arg MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} --build-arg MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}

            - name: Push the Docker image current commit tag
              run: docker push jarrioja/todo-app:$(git rev-parse --short HEAD)

            - name: Push the Docker image latest tag
              run: docker push jarrioja/todo-app:latest

    update-deployment-staging:
        name: Update deployment on staging
        runs-on: ubuntu-latest
        needs: Build-and-push-image-prod
        environment:
            name: staging

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Get short commit hash
              id: vars
              run: echo " name=short_commit_hash::$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: Update deployment.yml
              run: |
                  sed -i "s|image: jarrioja/todo-app:.*|image: jarrioja/todo-app:staging-${{ steps.vars.outputs.short_commit_hash }}|g" kubernetes/base/deployment.yml
                  cat kubernetes/base/deployment.yml

            - name: Commit changes.
              run: |
                  git add kubernetes/base/deployment.yml
                  git commit -m "Update image tag to ${{ steps.vars.outputs.short_commit_hash }}"
                  git push
